#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
// Notice that the "1" here equals the "1" in glVertexAttribPointer
layout(location = 1) in vec3 vertexColor; 

// Output data ; will be interpolated for each fragment.
out vec3 fragmentColor;

uniform vec3 translationVector; // added translaction vector

void main(){

    gl_Position.xyz = vertexPosition_modelspace + translationVector; // added translation vector
    gl_Position.w = 1.0;
	fragmentColor = vertexColor;

}

